{"version":3,"sources":["app/files/configuration sync /^/.*$","app/layout/Layout.tsx","app/layout/Default/Default.tsx","app/helpers/Function.helper.tsx","app/store/expand/Expand.type.tsx","app/store/expand/Expand.action.tsx","app/components/Material/HomePackAddon/HomePackAddon.component.tsx","app/components/Material/HomePackInstruction/HomePackInstruction.component.tsx","app/components/Material/HomePack/HomePack.component.tsx","app/components/Material/HomeServer/HomeServer.component.tsx","app/components/Material/Home/Home.component.tsx","app/layout/Material/Material.tsx","app/layout/MaterialDark/MaterialDark.tsx","app/layout/MaterialLight/MaterialLight.tsx","environment/environment.tsx","app/store/configuration/Configuration.type.tsx","app/store/location/Location.type.tsx","app/App.tsx","app/store/configuration/Configuration.action.tsx","app/store/location/Location.action.tsx","reportWebVitals.ts","app/store/configuration/Configuration.reducer.tsx","app/store/expand/Expand.reducer.tsx","app/store/location/Location.reducer.tsx","app/store/Store.tsx","index.tsx"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","ThemeType","children","exact","path","isObjectNull","undefined","isObjectNullOrEmpty","getOwnPropertyNames","length","isObjectEmpty","isStringNullOrEmpty","s","isStringNull","isStringEmpty","timestampDateToDate","date","locales","options","dateTimeFormat","Intl","DateTimeFormat","format","SET_INSTANCE","SET_INSTANCE_IS_ENABLED","setInstance","instanceKey","instanceValue","type","setInstanceIsEnabled","instanceValueIsEnabled","mapDispatchToProps","appConnector","connect","state","expandState","expand","locationState","location","useStyles","makeStyles","theme","createStyles","collapse","transform","transition","transitions","create","duration","shortest","disablePaddingBottom","paddingBottom","disablePaddingTop","paddingTop","HomePackAddon","props","addon","classes","value","Date","timestampValueToDate","timestamp","required","isEnabled","instance","useEffect","Grid","className","item","xs","sm","md","xl","zeroMinWidth","Box","Card","variant","square","CardHeader","avatar","Avatar","src","image","publicUrl","subheader","Typography","noWrap","version","subheaderTypographyProps","title","name","titleTypographyProps","CardContent","component","color","CardActions","disableSpacing","IconButton","hidden","download","href","target","GetApp","url","Info","wiki","Book","description","onClick","style","marginLeft","ExpandMore","Collapse","in","timeout","unmountOnExit","smallAvatar","width","spacing","height","instruction","ListItem","ListItemAvatar","Label","ListItemText","HtmlReactParser","HomePack","pack","mt","elevation","action","Divider","container","addons","index","instructions","HomeServer","server","List","dense","disablePadding","disableGutters","ListItemIcon","SettingsInputAntenna","address","SettingsEthernet","port","configurationState","configuration","Home","AppBar","position","Toolbar","profile","game","marginRight","minWidth","textAlign","packs","servers","Helmet","rel","content","Container","basename","process","createMuiTheme","palette","ThemeProvider","CssBaseline","Material","Layout","themeType","MaterialDark","require","MaterialLight","Default","environment","production","SET_PROFILE","SET_FILEPATH","SET_PUBLIC_URL","setProfile","filePath","setPublicUrl","App","window","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","filepath","ConfigurationReducer","ExpandReducer","CombinedReducer","combineReducers","LocationReducer","store","createStore","applyMiddleware","Thunk","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.6fbb1f2a.chunk.js","sourcesContent":["var map = {\n\t\"./profile\": 55,\n\t\"./profile.json\": 55\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 107;","import React from \"react\";\nimport Default from \"./Default/Default\";\nimport MaterialDark from \"./MaterialDark/MaterialDark\";\nimport MaterialLight from \"./MaterialLight/MaterialLight\";\n\nenum ThemeType {\n  Default,\n  MaterialDark,\n  MaterialLight,\n}\n\ntype LayoutProps = {\n  children?: JSX.Element;\n  themeType?: ThemeType;\n};\n\nconst Layout = ({ themeType, children }: LayoutProps): JSX.Element => {\n  switch (themeType) {\n    case ThemeType.MaterialDark:\n      require(\"./MaterialDark/_styles.scss\");\n\n      return (\n        <MaterialDark.Element>\n          <MaterialDark.Router>{children}</MaterialDark.Router>\n        </MaterialDark.Element>\n      );\n    case ThemeType.MaterialLight:\n      require(\"./MaterialLight/_styles.scss\");\n\n      return (\n        <MaterialLight.Element>\n          <MaterialLight.Router>{children}</MaterialLight.Router>\n        </MaterialLight.Element>\n      );\n    default:\n      require(\"./Default/_styles.scss\");\n\n      return (\n        <Default.Element>\n          <Default.Router>{children}</Default.Router>\n        </Default.Element>\n      );\n  }\n};\n\n/* Layout.defaultProps = {\n  layoutType: LayoutType.Default,\n  children: \"\"\n};\n\nLayout.propTypes = {\n  layoutType: PropTypes.oneOf($enum(LayoutType).getValues()),\n  children: PropTypes.node\n}; */\n\nexport { ThemeType };\nexport default Layout;\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\n\ntype ElementProps = {\n  children?: JSX.Element;\n};\n\ntype RouterProps = {\n  children?: JSX.Element;\n};\n\nconst Element = ({ children }: ElementProps): JSX.Element => {\n  return (\n    <div>\n      <div>{children}</div>\n    </div>\n  );\n};\n\nconst Router = ({ children }: RouterProps): JSX.Element => {\n  return (\n    <div>\n      <BrowserRouter>\n        <Switch>\n          <Route exact path=\"/\" />\n        </Switch>\n      </BrowserRouter>\n      {children}\n    </div>\n  );\n};\nexport default { Element, Router };\n","const isObjectEmpty = (o: unknown): boolean =>\n  Object.getOwnPropertyNames(o).length === 0;\n\nconst isObjectNull = (o: unknown): boolean => o === undefined;\n\nconst isObjectNullOrEmpty = (o: unknown): boolean =>\n  isObjectNull(o) || isObjectEmpty(o);\n\nconst isStringEmpty = (s: string): boolean => s.length === 0;\n\nconst isStringNull = (s: string | undefined): boolean => s === undefined;\n\nconst isStringNullOrEmpty = (s: string | undefined): boolean =>\n  isStringNull(s) || isStringEmpty(s as string);\n\nconst timestampDateToDate = (\n  date: Date,\n  locales = \"en-US\",\n  options: Intl.DateTimeFormatOptions = {}\n): string => {\n  const dateTimeFormat = Intl.DateTimeFormat(locales, options);\n\n  return dateTimeFormat.format(date);\n};\n\nconst timestampValueToDate = (\n  value: number,\n  locales = \"en-US\",\n  options: Intl.DateTimeFormatOptions = {}\n): string => {\n  const date = new Date(value * 1000);\n\n  return timestampDateToDate(date, locales, options);\n};\n\nexport {\n  isObjectEmpty,\n  isObjectNull,\n  isObjectNullOrEmpty,\n  isStringEmpty,\n  isStringNull,\n  isStringNullOrEmpty,\n  timestampDateToDate,\n  timestampValueToDate,\n};\n","import { Instance, InstanceValue } from \"./Expand.interface\";\n\nexport const SET_INSTANCE = \"EXPAND_1\";\nexport const SET_INSTANCE_IS_ENABLED = \"EXPAND_2\";\n\ninterface SetInstanceAction {\n  type: typeof SET_INSTANCE;\n  instanceKey: string;\n  instanceValue: InstanceValue;\n}\n\ninterface SetInstanceIsEnabledAction {\n  type: typeof SET_INSTANCE_IS_ENABLED;\n  instanceKey: string;\n  instanceValueIsEnabled: boolean;\n}\n\nexport type ExpandAction = SetInstanceAction | SetInstanceIsEnabledAction;\n\nexport interface ExpandState {\n  instance: Instance;\n}\n\n// https://medium.com/@pie6k/better-way-to-create-type-safe-redux-actions-and-reducers-with-typescript-45386808c103\n","import { InstanceValue } from \"./Expand.interface\";\nimport {\n  ExpandAction,\n  SET_INSTANCE,\n  SET_INSTANCE_IS_ENABLED,\n} from \"./Expand.type\";\n\nconst setInstance = (\n  instanceKey: string,\n  instanceValue: InstanceValue\n): ExpandAction => {\n  return {\n    type: SET_INSTANCE,\n    instanceKey,\n    instanceValue,\n  };\n};\n\nconst setInstanceIsEnabled = (\n  instanceKey: string,\n  instanceValueIsEnabled: boolean\n): ExpandAction => {\n  return {\n    type: SET_INSTANCE_IS_ENABLED,\n    instanceKey,\n    instanceValueIsEnabled,\n  };\n};\n\nexport { setInstance, setInstanceIsEnabled };\n","import React, { useEffect } from \"react\";\nimport {\n  Grid,\n  Card,\n  Typography,\n  CardContent,\n  CardHeader,\n  IconButton,\n  CardActions,\n  Collapse,\n  Avatar,\n  makeStyles,\n  Theme,\n  createStyles,\n  Box,\n} from \"@material-ui/core\";\nimport { Book, GetApp, ExpandMore, Info } from \"@material-ui/icons\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport \"./HomePackAddon.style.scss\";\nimport {\n  isObjectNull,\n  isObjectNullOrEmpty,\n  isStringNullOrEmpty,\n  timestampValueToDate,\n} from \"../../../helpers/Function.helper\";\nimport { ProfilePackAddon } from \"../../../store/configuration/Configuration.interface\";\nimport {\n  setInstance,\n  setInstanceIsEnabled,\n} from \"../../../store/expand/Expand.action\";\nimport { State } from \"../../../store/Store\";\n\nconst mapStateToProperties = (state: State) => ({\n  expandState: state.expand,\n  locationState: state.location,\n});\n\nconst mapDispatchToProps = {\n  setInstance,\n  setInstanceIsEnabled,\n};\n\nconst appConnector = connect(mapStateToProperties, mapDispatchToProps);\n\ntype ConnectorProps = ConnectedProps<typeof appConnector>;\n\ntype Props = ConnectorProps & {\n  addon: ProfilePackAddon;\n  id: string;\n};\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    collapse: {\n      transform: \"rotate(0deg)\",\n      transition: theme.transitions.create(\"transform\", {\n        duration: theme.transitions.duration.shortest,\n      }),\n    },\n    expand: {\n      transform: \"rotate(180deg)\",\n    },\n    disablePaddingBottom: {\n      paddingBottom: \"0\",\n    },\n    disablePaddingTop: {\n      paddingTop: \"0\",\n    },\n  })\n);\n\nconst HomePackAddonComponent = (props: Props): JSX.Element => {\n  const {\n    expandState,\n    locationState,\n    setInstance,\n    setInstanceIsEnabled,\n    addon,\n    id,\n  } = props;\n\n  const classes = useStyles();\n\n  const date = timestampValueToDate(addon.timestamp);\n  const required = isObjectNull(addon.required) ? true : addon.required;\n\n  const instanceKey = `HOMEPACKADDON${id}`;\n  const isEnabled = expandState.instance[instanceKey]?.isEnabled;\n\n  useEffect(() => {\n    if (isObjectNullOrEmpty(expandState.instance)) {\n      setInstance(instanceKey, {\n        isEnabled: false,\n      });\n    }\n  }, [expandState, instanceKey, setInstance, setInstanceIsEnabled]);\n\n  const handleDescriptionExpandClick = () => {\n    setInstanceIsEnabled(instanceKey, !isEnabled);\n  };\n\n  return (\n    <Grid\n      className=\"home-pack-addon\"\n      item\n      xs={12}\n      sm={6}\n      md={4}\n      xl={3}\n      zeroMinWidth\n    >\n      <Box>\n        <Card variant=\"outlined\" square>\n          <CardHeader\n            avatar={\n              <Avatar\n                src={\n                  addon.image ||\n                  `${locationState.publicUrl}/images/ph-addon.png`\n                }\n                variant=\"rounded\"\n              />\n            }\n            className=\"disable-padding-bottom\"\n            subheader={\n              <Typography noWrap variant=\"subtitle2\">\n                {addon.version}\n              </Typography>\n            }\n            subheaderTypographyProps={{\n              variant: \"subtitle2\",\n            }}\n            title={\n              <Typography noWrap variant=\"subtitle1\">\n                {addon.name}\n              </Typography>\n            }\n            titleTypographyProps={{\n              variant: \"subtitle1\",\n            }}\n          />\n          <CardContent>\n            <Typography\n              component=\"p\"\n              color=\"textSecondary\"\n              noWrap\n              variant=\"caption\"\n            >\n              <strong>Date:</strong> {date}\n            </Typography>\n            <Typography\n              component=\"p\"\n              color=\"textSecondary\"\n              noWrap\n              variant=\"caption\"\n            >\n              <strong>Required:</strong> {required ? \"Yes\" : \"No\"}\n            </Typography>\n          </CardContent>\n          <CardActions className=\"disable-padding-top\" disableSpacing>\n            <IconButton\n              hidden={isStringNullOrEmpty(addon.download)}\n              href={addon.download || \"#\"}\n              target=\"_blank\"\n            >\n              <GetApp />\n            </IconButton>\n            <IconButton\n              hidden={isStringNullOrEmpty(addon.url)}\n              href={addon.url || \"#\"}\n              target=\"_blank\"\n            >\n              <Info />\n            </IconButton>\n            <IconButton\n              hidden={isStringNullOrEmpty(addon.wiki)}\n              href={addon.wiki || \"#\"}\n              target=\"_blank\"\n            >\n              <Book />\n            </IconButton>\n            <IconButton\n              className={isEnabled ? classes.expand : classes.collapse}\n              hidden={isStringNullOrEmpty(addon.description)}\n              onClick={handleDescriptionExpandClick}\n              style={{\n                marginLeft: \"auto\",\n              }}\n            >\n              <ExpandMore />\n            </IconButton>\n          </CardActions>\n          <Collapse in={isEnabled} timeout=\"auto\" unmountOnExit>\n            <CardContent>\n              <Typography component=\"p\" color=\"textSecondary\" variant=\"body2\">\n                {addon.description}\n              </Typography>\n            </CardContent>\n          </Collapse>\n        </Card>\n      </Box>\n    </Grid>\n  );\n};\n\nconst HomePackAddon = appConnector(HomePackAddonComponent);\n\nexport default HomePackAddon;\n","import React from \"react\";\nimport {\n  makeStyles,\n  ListItem,\n  ListItemText,\n  ListItemAvatar,\n  Typography,\n} from \"@material-ui/core\";\nimport HtmlReactParser from \"html-react-parser\";\nimport { Label } from \"@material-ui/icons\";\n\ntype Props = {\n  instruction: string;\n  id: string;\n};\n\nconst useStyles = makeStyles((theme) => ({\n  smallAvatar: {\n    width: theme.spacing(3),\n    height: theme.spacing(3),\n  },\n}));\n\nconst HomePackAddon = (props: Props): JSX.Element => {\n  const { instruction } = props;\n  const classes = useStyles();\n\n  return (\n    <ListItem>\n      <ListItemAvatar>\n        <Label />\n      </ListItemAvatar>\n      <ListItemText>\n        <Typography component=\"p\" variant=\"body2\">\n          {HtmlReactParser(instruction)}\n        </Typography>\n      </ListItemText>\n    </ListItem>\n  );\n};\n\nexport default HomePackAddon;\n","import React from \"react\";\nimport {\n  Grid,\n  Typography,\n  Divider,\n  Card,\n  CardContent,\n  CardHeader,\n  IconButton,\n  Box,\n  Avatar,\n} from \"@material-ui/core\";\nimport { Info, GetApp } from \"@material-ui/icons\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport \"./HomePack.style.scss\";\nimport {\n  ProfilePack,\n  ProfilePackAddon,\n} from \"../../../store/configuration/Configuration.interface\";\nimport HomePackAddon from \"../HomePackAddon/HomePackAddon.component\";\nimport HomePackInstruction from \"../HomePackInstruction/HomePackInstruction.component\";\nimport { isStringNullOrEmpty } from \"../../../helpers/Function.helper\";\nimport { State } from \"../../../store/Store\";\n\nconst mapStateToProperties = (state: State) => ({\n  expandState: state.expand,\n  locationState: state.location,\n});\n\nconst mapDispatchToProps = {};\n\nconst appConnector = connect(mapStateToProperties, mapDispatchToProps);\n\ntype ConnectorProps = ConnectedProps<typeof appConnector>;\n\ntype Props = ConnectorProps & {\n  key: string;\n  pack: ProfilePack;\n};\n\nconst HomePackComponent = (props: Props): JSX.Element => {\n  const { locationState, pack } = props;\n\n  return (\n    <Grid className=\"home-pack\" item xs={12} zeroMinWidth>\n      <Box mt={2}>\n        <Card elevation={3} variant=\"elevation\" square>\n          <CardHeader\n            action={\n              <div>\n                <IconButton\n                  hidden={isStringNullOrEmpty(pack.download)}\n                  href={pack.download || \"#\"}\n                  target=\"_blank\"\n                >\n                  <GetApp />\n                </IconButton>\n                <IconButton\n                  hidden={isStringNullOrEmpty(pack.url)}\n                  href={pack.url || \"#\"}\n                  target=\"_blank\"\n                >\n                  <Info />\n                </IconButton>\n              </div>\n            }\n            avatar={\n              <Avatar\n                src={\n                  pack.image || `${locationState.publicUrl}/images/ph-pack.png`\n                }\n                variant=\"rounded\"\n              />\n            }\n            subheader={<Typography noWrap>{pack.version}</Typography>}\n            subheaderTypographyProps={{\n              variant: \"subtitle2\",\n            }}\n            title={<Typography noWrap>{pack.name}</Typography>}\n            titleTypographyProps={{\n              variant: \"subtitle1\",\n            }}\n          />\n          <CardContent>\n            <Typography component=\"p\" color=\"textSecondary\" variant=\"body2\">\n              {pack.description}\n            </Typography>\n            <Box mt={2}>\n              <Typography variant=\"h6\">Addons</Typography>\n              <Divider />\n            </Box>\n            <Box mt={2}>\n              <Grid container spacing={2}>\n                {pack.addons?.map((value: ProfilePackAddon, index: number) => {\n                  return (\n                    <HomePackAddon addon={value} key={index} id={`${index}`} />\n                  );\n                })}\n              </Grid>\n            </Box>\n            <Box mt={2}>\n              <Typography variant=\"h6\">Instructions</Typography>\n              <Divider />\n            </Box>\n            <Box mt={2}>\n              <Grid container spacing={2}>\n                {pack.instructions?.map((value: string, index: number) => {\n                  return (\n                    <HomePackInstruction\n                      instruction={value}\n                      key={index}\n                      id={`${index}`}\n                    />\n                  );\n                })}\n              </Grid>\n            </Box>\n          </CardContent>\n        </Card>\n      </Box>\n    </Grid>\n  );\n};\n\nconst HomePack = appConnector(HomePackComponent);\n\nexport default HomePack;\n","import React from \"react\";\nimport {\n  Grid,\n  Typography,\n  Card,\n  CardHeader,\n  Box,\n  Avatar,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  CardContent,\n} from \"@material-ui/core\";\nimport { SettingsEthernet, SettingsInputAntenna } from \"@material-ui/icons\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport \"./HomeServer.style.scss\";\nimport { ProfileServer } from \"../../../store/configuration/Configuration.interface\";\nimport { State } from \"../../../store/Store\";\n\nconst mapStateToProperties = (state: State) => ({\n  locationState: state.location,\n});\n\nconst mapDispatchToProps = {};\n\nconst appConnector = connect(mapStateToProperties, mapDispatchToProps);\n\ntype ConnectorProps = ConnectedProps<typeof appConnector>;\n\ntype Props = ConnectorProps & {\n  key: string;\n  server: ProfileServer;\n};\n\nconst HomeServerComponent = (props: Props): JSX.Element => {\n  const { locationState, server } = props;\n\n  return (\n    <Grid className=\"home-server\" item xs={12} sm={6}>\n      <Box mt={2}>\n        <Card elevation={3} variant=\"elevation\" square>\n          <CardHeader\n            avatar={\n              <Avatar\n                src={\n                  server.image ||\n                  `${locationState.publicUrl}/images/ph-server.png`\n                }\n                variant=\"rounded\"\n              />\n            }\n            subheader={server.description}\n            subheaderTypographyProps={{\n              variant: \"subtitle2\",\n            }}\n            title={server.name}\n            titleTypographyProps={{\n              variant: \"subtitle1\",\n            }}\n          />\n          <CardContent>\n            <List dense disablePadding>\n              <ListItem disableGutters>\n                <ListItemIcon>\n                  <SettingsInputAntenna />\n                </ListItemIcon>\n                <ListItemText>\n                  <Typography component=\"p\" color=\"textPrimary\" variant=\"body1\">\n                    Address\n                  </Typography>\n                  <Typography\n                    component=\"p\"\n                    color=\"textSecondary\"\n                    variant=\"body2\"\n                  >\n                    {server.address}\n                  </Typography>\n                </ListItemText>\n              </ListItem>\n              <ListItem disableGutters>\n                <ListItemIcon>\n                  <SettingsEthernet />\n                </ListItemIcon>\n                <ListItemText>\n                  <Typography component=\"p\" color=\"textPrimary\" variant=\"body1\">\n                    Port\n                  </Typography>\n                  <Typography\n                    component=\"p\"\n                    color=\"textSecondary\"\n                    variant=\"body2\"\n                  >\n                    {server.port}\n                  </Typography>\n                </ListItemText>\n              </ListItem>\n            </List>\n          </CardContent>\n        </Card>\n      </Box>\n    </Grid>\n  );\n};\n\nconst HomeServer = appConnector(HomeServerComponent);\n\nexport default HomeServer;\n","import {\n  AppBar,\n  Toolbar,\n  Typography,\n  Box,\n  Grid,\n  IconButton,\n  Avatar,\n  Collapse,\n  makeStyles,\n  createStyles,\n  Theme,\n  Divider,\n} from \"@material-ui/core\";\nimport { Info, ExpandMore, GetApp } from \"@material-ui/icons\";\nimport React, { useEffect } from \"react\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport \"./Home.style.scss\";\nimport {\n  isObjectNullOrEmpty,\n  isStringNullOrEmpty,\n} from \"../../../helpers/Function.helper\";\nimport {\n  ProfilePack,\n  ProfileServer,\n} from \"../../../store/configuration/Configuration.interface\";\nimport { State } from \"../../../store/Store\";\nimport {\n  setInstance,\n  setInstanceIsEnabled,\n} from \"../../../store/expand/Expand.action\";\nimport HomePack from \"../HomePack/HomePack.component\";\nimport HomeServer from \"../HomeServer/HomeServer.component\";\n\nconst mapStateToProperties = (state: State) => ({\n  configurationState: state.configuration,\n  expandState: state.expand,\n  locationState: state.location,\n});\n\nconst mapDispatchToProps = {\n  setInstance,\n  setInstanceIsEnabled,\n};\n\nconst appConnector = connect(mapStateToProperties, mapDispatchToProps);\n\ntype ConnectorProps = ConnectedProps<typeof appConnector>;\n\ntype Props = ConnectorProps;\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    collapse: {\n      transform: \"rotate(0deg)\",\n      transition: theme.transitions.create(\"transform\", {\n        duration: theme.transitions.duration.shortest,\n      }),\n    },\n    expand: {\n      transform: \"rotate(180deg)\",\n    },\n  })\n);\n\nconst HomeComponent = (props: Props): JSX.Element => {\n  const {\n    configurationState,\n    expandState,\n    locationState,\n    setInstance,\n    setInstanceIsEnabled,\n  } = props;\n\n  const classes = useStyles();\n\n  const instanceKey = \"HOME\";\n  const isEnabled = expandState.instance[instanceKey]?.isEnabled;\n\n  useEffect(() => {\n    if (isObjectNullOrEmpty(expandState.instance)) {\n      setInstance(instanceKey, {\n        isEnabled: false,\n      });\n    }\n  }, [expandState, instanceKey, setInstance, setInstanceIsEnabled]);\n\n  const handleDescriptionExpandClick = () => {\n    setInstanceIsEnabled(instanceKey, !isEnabled);\n  };\n\n  return (\n    <Box className=\"home\">\n      <AppBar color=\"default\" position=\"fixed\">\n        <Toolbar>\n          <Avatar\n            src={\n              configurationState.profile.game?.image ||\n              `${locationState.publicUrl}/images/ph-game.png`\n            }\n            style={{\n              marginRight: \"16px\",\n            }}\n            variant=\"rounded\"\n          />\n          <Grid item zeroMinWidth>\n            <Typography noWrap variant=\"subtitle1\">\n              {configurationState.profile.game?.name}\n            </Typography>\n            <Typography noWrap variant=\"subtitle2\">\n              {configurationState.profile.game?.version}\n            </Typography>\n          </Grid>\n          <Grid\n            item\n            style={{\n              marginLeft: \"auto\",\n              minWidth: \"150px\",\n              textAlign: \"right\",\n            }}\n          >\n            <IconButton\n              hidden={isStringNullOrEmpty(configurationState.profile.game?.url)}\n              href={configurationState.profile.game?.url || \"#\"}\n              target=\"_blank\"\n            >\n              <Info />\n            </IconButton>\n            <IconButton\n              hidden={isStringNullOrEmpty(\n                configurationState.profile.game?.download\n              )}\n              href={configurationState.profile.game?.download || \"#\"}\n              target=\"_blank\"\n            >\n              <GetApp />\n            </IconButton>\n            <IconButton\n              hidden={isStringNullOrEmpty(\n                configurationState.profile.game?.description\n              )}\n              className={isEnabled ? classes.expand : classes.collapse}\n              onClick={handleDescriptionExpandClick}\n            >\n              <ExpandMore />\n            </IconButton>\n          </Grid>\n        </Toolbar>\n        <Collapse in={isEnabled} timeout=\"auto\" unmountOnExit>\n          <Toolbar>\n            <Typography component=\"p\" color=\"textSecondary\" variant=\"body2\">\n              {configurationState.profile.game?.description}\n            </Typography>\n          </Toolbar>\n        </Collapse>\n      </AppBar>\n      <Toolbar />\n      <Box mt={2}>\n        <Typography variant=\"h6\">Packs</Typography>\n        <Divider />\n      </Box>\n      <Grid container>\n        {configurationState.profile.packs?.map(\n          (value: ProfilePack, index: number) => {\n            return <HomePack key={`${index}`} pack={value} />;\n          }\n        )}\n      </Grid>\n      <Box mt={2}>\n        <Typography variant=\"h6\">Servers</Typography>\n        <Divider />\n      </Box>\n      <Grid container spacing={2}>\n        {configurationState.profile.servers?.map(\n          (value: ProfileServer, index: number) => {\n            return <HomeServer key={`${index}`} server={value} />;\n          }\n        )}\n      </Grid>\n      <Box mt={2} />\n    </Box>\n  );\n};\n\nconst Home = appConnector(HomeComponent);\n\nexport default Home;\n","import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Container } from \"@material-ui/core\";\nimport Helmet from \"react-helmet\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Home from \"../../components/Material/Home/Home.component\";\n\ntype ElementProps = {\n  children?: JSX.Element;\n};\n\ntype RouterProps = {\n  children?: JSX.Element;\n};\n\nconst Element = ({ children = <></> }: ElementProps): JSX.Element => {\n  return (\n    <div>\n      <Helmet>\n        <link\n          href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\"\n          rel=\"stylesheet\"\n        />\n        <meta\n          name=\"viewport\"\n          content=\"minimum-scale=1, initial-scale=1, width=device-width\"\n        />\n      </Helmet>\n      <Container>{children}</Container>\n    </div>\n  );\n};\n\nconst Router = ({ children }: RouterProps): JSX.Element => {\n  return (\n    <div>\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </BrowserRouter>\n      {children}\n    </div>\n  );\n};\n\nexport default { Element, Router };\n","import React from \"react\";\nimport { ThemeProvider, createMuiTheme, CssBaseline } from \"@material-ui/core\";\nimport Material from \"../Material/Material\";\n\ntype ElementProps = {\n  children?: JSX.Element;\n};\n\ntype RouterProps = {\n  children?: JSX.Element;\n};\n\nconst Element = ({ children }: ElementProps): JSX.Element => {\n  const theme = createMuiTheme({\n    palette: {\n      type: \"dark\",\n    },\n  });\n\n  return (\n    <div>\n      <ThemeProvider theme={theme}>\n        <CssBaseline>\n          <Material.Element>{children}</Material.Element>\n        </CssBaseline>\n      </ThemeProvider>\n    </div>\n  );\n};\n\nconst Router = ({ children }: RouterProps): JSX.Element => {\n  return (\n    <div>\n      <Material.Router>{children}</Material.Router>\n    </div>\n  );\n};\n\nexport default { Element, Router };\n","import React from \"react\";\nimport { ThemeProvider, createMuiTheme, CssBaseline } from \"@material-ui/core\";\nimport Material from \"../Material/Material\";\n\ntype ElementProps = {\n  children?: JSX.Element;\n};\n\ntype RouterProps = {\n  children?: JSX.Element;\n};\n\nconst Element = ({ children }: ElementProps): JSX.Element => {\n  const theme = createMuiTheme({\n    palette: {\n      type: \"light\",\n    },\n  });\n\n  return (\n    <div>\n      <ThemeProvider theme={theme}>\n        <CssBaseline>\n          <Material.Element>{children}</Material.Element>\n        </CssBaseline>\n      </ThemeProvider>\n    </div>\n  );\n};\n\nconst Router = ({ children }: RouterProps): JSX.Element => {\n  return <Material.Router>{children}</Material.Router>;\n};\n\nexport default { Element, Router };\n","import { ThemeType } from \"../app/layout/Layout\";\n\nconst environment = {\n  production: true,\n  profile: \"configuration.json\",\n  theme: ThemeType.MaterialDark,\n};\n\nexport default environment;\n","import { Profile } from \"./Configuration.interface\";\n\nexport const SET_PROFILE = \"CONFIGURATION_1\";\nexport const SET_FILEPATH = \"CONFIGURATION_2\";\n\ninterface SetFilepathAction {\n  type: typeof SET_FILEPATH;\n  filepath: string;\n}\n\ninterface SetProfileAction {\n  type: typeof SET_PROFILE;\n  profile: Profile;\n}\n\nexport type ConfigurationAction = SetFilepathAction | SetProfileAction;\n\nexport interface ConfigurationState {\n  filepath: string;\n  profile: Profile;\n}\n","export const SET_PUBLIC_URL = \"LOCATION_1\";\n\ninterface SetPublicUrlAction {\n  type: typeof SET_PUBLIC_URL;\n  publicUrl: string;\n}\n\nexport type LocationAction = SetPublicUrlAction;\n\nexport interface LocationState {\n  publicUrl: string;\n}\n","import React, { useEffect } from \"react\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport environment from \"../environment/environment\";\nimport { State } from \"./store/Store\";\nimport { setProfile } from \"./store/configuration/Configuration.action\";\nimport { setPublicUrl } from \"./store/location/Location.action\";\nimport {\n  isObjectNullOrEmpty,\n  isStringNullOrEmpty,\n} from \"./helpers/Function.helper\";\nimport Layout from \"./layout/Layout\";\n\nconst mapStateToProperties = (state: State) => ({\n  configurationState: state.configuration,\n  locationState: state.location,\n});\n\nconst mapDispatchToProps = {\n  setProfile,\n  setPublicUrl,\n};\n\nconst appConnector = connect(mapStateToProperties, mapDispatchToProps);\n\ntype ConnectorProps = ConnectedProps<typeof appConnector>;\n\ntype Props = ConnectorProps;\n\nconst AppComponent = (props: Props) => {\n  const { configurationState, locationState, setProfile, setPublicUrl } = props;\n\n  useEffect(() => {\n    if (isObjectNullOrEmpty(configurationState.profile)) {\n      setProfile(\"profile.json\");\n    }\n\n    if (isStringNullOrEmpty(locationState.publicUrl)) {\n      setPublicUrl(window.location.href);\n    }\n  }, [configurationState, locationState, setProfile, setPublicUrl]);\n  return <Layout themeType={environment.theme} />;\n};\n\nconst App = appConnector(AppComponent);\n\nexport default App;\n","import { Profile } from \"./Configuration.interface\";\nimport {\n  ConfigurationAction,\n  SET_FILEPATH,\n  SET_PROFILE,\n} from \"./Configuration.type\";\n\nconst setProfile = (filePath = \"profile.json\"): ConfigurationAction => {\n  const profile: Profile = require(`../../files/configuration/${filePath}`);\n\n  return {\n    type: SET_PROFILE,\n    profile,\n  };\n};\n\nconst setFilepath = (filepath: string): ConfigurationAction => {\n  return {\n    type: SET_FILEPATH,\n    filepath,\n  };\n};\n\nexport { setProfile, setFilepath };\n","import { LocationAction, SET_PUBLIC_URL } from \"./Location.type\";\n\nconst setPublicUrl = (publicUrl: string): LocationAction => {\n  return {\n    type: SET_PUBLIC_URL,\n    publicUrl,\n  };\n};\n\nexport { setPublicUrl };\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\n  ConfigurationState,\n  ConfigurationAction,\n  SET_FILEPATH,\n  SET_PROFILE,\n} from \"./Configuration.type\";\n\nconst initialState: ConfigurationState = {\n  filepath: \"configuration.json\",\n  profile: {},\n};\n\nconst ConfigurationReducer = (\n  state: ConfigurationState = initialState,\n  action: ConfigurationAction\n): ConfigurationState => {\n  switch (action.type) {\n    case SET_PROFILE:\n      return {\n        ...state,\n        profile: action.profile,\n      };\n    case SET_FILEPATH:\n      return {\n        ...state,\n        filepath: action.filepath,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default ConfigurationReducer;\n","import {\n  ExpandState,\n  ExpandAction,\n  SET_INSTANCE,\n  SET_INSTANCE_IS_ENABLED,\n} from \"./Expand.type\";\n\nconst initialState: ExpandState = {\n  instance: {},\n};\n\nconst ExpandReducer = (\n  state: ExpandState = initialState,\n  action: ExpandAction\n): ExpandState => {\n  switch (action.type) {\n    case SET_INSTANCE:\n      return {\n        ...state,\n        instance: {\n          [action.instanceKey]: action.instanceValue,\n        },\n      };\n    case SET_INSTANCE_IS_ENABLED:\n      return {\n        ...state,\n        instance: {\n          [action.instanceKey]: {\n            isEnabled: action.instanceValueIsEnabled,\n          },\n        },\n      };\n    default:\n      return state;\n  }\n};\n\nexport default ExpandReducer;\n","import { LocationState, LocationAction, SET_PUBLIC_URL } from \"./Location.type\";\n\nconst initialState: LocationState = {\n  publicUrl: \"\",\n};\n\nconst ExpandReducer = (\n  state: LocationState = initialState,\n  action: LocationAction\n): LocationState => {\n  switch (action.type) {\n    case SET_PUBLIC_URL:\n      return {\n        ...state,\n        publicUrl: action.publicUrl,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default ExpandReducer;\n","import { applyMiddleware, combineReducers, createStore } from \"redux\";\nimport Thunk from \"redux-thunk\";\nimport ConfigurationReducer from \"./configuration/Configuration.reducer\";\nimport ExpandReducer from \"./expand/Expand.reducer\";\nimport LocationReducer from \"./location/Location.reducer\";\n\nconst CombinedReducer = combineReducers({\n  configuration: ConfigurationReducer,\n  expand: ExpandReducer,\n  location: LocationReducer,\n});\n\nexport type State = ReturnType<typeof CombinedReducer>;\n\nexport const configureStore = () => {\n  const store = createStore(CombinedReducer, applyMiddleware(Thunk));\n\n  return store;\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { Provider } from \"react-redux\";\nimport App from \"./app/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { configureStore } from \"./app/store/Store\";\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector(\"#root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}